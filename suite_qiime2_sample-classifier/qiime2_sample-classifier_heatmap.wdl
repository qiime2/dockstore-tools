# 
# Copyright (c) 2023, QIIME 2 development team.
# 
# Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
# 
# 
# This tool was automatically generated by:
#     q2wdl (version: 0.1.0)
# for:
#     qiime2 (version: 2023.2.0)
# 


version 1.0

struct qiime2_sample_classifier_heatmap_params {
    File table
    File importance
    String? sample_metadata
    File? q2wdl_metafile_sample_metadata
    String? feature_metadata
    File? q2wdl_metafile_feature_metadata
    Int feature_count
    Float importance_threshold
    Boolean group_samples
    Boolean normalize
    String missing_samples
    String metric
    String method
    String cluster
    String color_scheme
    String heatmap
    String filtered_table
}

task qiime2_sample_classifier_heatmap {

    input {
        File table
        File importance
        String? sample_metadata
        File? q2wdl_metafile_sample_metadata
        String? feature_metadata
        File? q2wdl_metafile_feature_metadata
        Int feature_count = 50
        Float importance_threshold = 0
        Boolean group_samples = false
        Boolean normalize = true
        String missing_samples = "ignore"
        String metric = "braycurtis"
        String method = "average"
        String cluster = "features"
        String color_scheme = "rocket"
        String heatmap
        String filtered_table
    }

    qiime2_sample_classifier_heatmap_params task_params = object {
        table: table,
        importance: importance,
        sample_metadata: sample_metadata,
        q2wdl_metafile_sample_metadata: q2wdl_metafile_sample_metadata,
        feature_metadata: feature_metadata,
        q2wdl_metafile_feature_metadata: q2wdl_metafile_feature_metadata,
        feature_count: feature_count,
        importance_threshold: importance_threshold,
        group_samples: group_samples,
        normalize: normalize,
        missing_samples: missing_samples,
        metric: metric,
        method: method,
        cluster: cluster,
        color_scheme: color_scheme,
        heatmap: heatmap,
        filtered_table: filtered_table
    }

    command {
        q2dataflow q2wdl run sample_classifier heatmap ~{write_json(task_params)}
    }

    output {
        File heatmap_file = "~{heatmap}"
        File filtered_table_file = "~{filtered_table}"
    }

}


workflow wkflw_qiime2_sample_classifier_heatmap {
input {
        File table
        File importance
        String? sample_metadata
        File? q2wdl_metafile_sample_metadata
        String? feature_metadata
        File? q2wdl_metafile_feature_metadata
        Int feature_count = 50
        Float importance_threshold = 0
        Boolean group_samples = false
        Boolean normalize = true
        String missing_samples = "ignore"
        String metric = "braycurtis"
        String method = "average"
        String cluster = "features"
        String color_scheme = "rocket"
        String heatmap
        String filtered_table
    }

    call qiime2_sample_classifier_heatmap {
        input: table=table, importance=importance, sample_metadata=sample_metadata, q2wdl_metafile_sample_metadata=q2wdl_metafile_sample_metadata, feature_metadata=feature_metadata, q2wdl_metafile_feature_metadata=q2wdl_metafile_feature_metadata, feature_count=feature_count, importance_threshold=importance_threshold, group_samples=group_samples, normalize=normalize, missing_samples=missing_samples, metric=metric, method=method, cluster=cluster, color_scheme=color_scheme, heatmap=heatmap, filtered_table=filtered_table
    }

}
