# 
# Copyright (c) 2024, QIIME 2 development team.
# 
# Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
# 
# 
# This template was automatically generated by:
#     q2dataflow wdl (version: 0.2.0)
# for:
#     qiime2 (version: 2024.2.0)
# 


version 1.0

struct qiime2_phylogeny_iqtree_ultrafast_bootstrap_params {
    File alignment
    Int? seed
    Int n_cores
    Int? n_cores_max
    Int n_runs
    String substitution_model
    Int bootstrap_replicates
    Int? n_init_pars_trees
    Int? n_top_init_trees
    Int? n_best_retain_trees
    Int? stop_iter
    Float? perturb_nni_strength
    Int? spr_radius
    Int? n_max_ufboot_iter
    Int? n_ufboot_steps
    Float? min_cor_ufboot
    Float? ep_break_ufboot
    Boolean allnni
    Int? alrt
    Boolean abayes
    Int? lbp
    Boolean bnni
    Boolean safe
    String tree
}

task qiime2_phylogeny_iqtree_ultrafast_bootstrap {

    input {
        File alignment
        Int? seed
        Int n_cores = 1
        Int? n_cores_max
        Int n_runs = 1
        String substitution_model = "MFP"
        Int bootstrap_replicates = 1000
        Int? n_init_pars_trees
        Int? n_top_init_trees
        Int? n_best_retain_trees
        Int? stop_iter
        Float? perturb_nni_strength
        Int? spr_radius
        Int? n_max_ufboot_iter
        Int? n_ufboot_steps
        Float? min_cor_ufboot
        Float? ep_break_ufboot
        Boolean allnni = false
        Int? alrt
        Boolean abayes = false
        Int? lbp
        Boolean bnni = false
        Boolean safe = false
        String tree
    }

    qiime2_phylogeny_iqtree_ultrafast_bootstrap_params task_params = object {
        alignment: alignment,
        seed: seed,
        n_cores: n_cores,
        n_cores_max: n_cores_max,
        n_runs: n_runs,
        substitution_model: substitution_model,
        bootstrap_replicates: bootstrap_replicates,
        n_init_pars_trees: n_init_pars_trees,
        n_top_init_trees: n_top_init_trees,
        n_best_retain_trees: n_best_retain_trees,
        stop_iter: stop_iter,
        perturb_nni_strength: perturb_nni_strength,
        spr_radius: spr_radius,
        n_max_ufboot_iter: n_max_ufboot_iter,
        n_ufboot_steps: n_ufboot_steps,
        min_cor_ufboot: min_cor_ufboot,
        ep_break_ufboot: ep_break_ufboot,
        allnni: allnni,
        alrt: alrt,
        abayes: abayes,
        lbp: lbp,
        bnni: bnni,
        safe: safe,
        tree: tree
    }

    command {
        q2dataflow wdl run phylogeny iqtree_ultrafast_bootstrap ~{write_json(task_params)}
    }

    output {
        File tree_file = "~{tree}"
    }

}


workflow wkflw_qiime2_phylogeny_iqtree_ultrafast_bootstrap {
input {
        File alignment
        Int? seed
        Int n_cores = 1
        Int? n_cores_max
        Int n_runs = 1
        String substitution_model = "MFP"
        Int bootstrap_replicates = 1000
        Int? n_init_pars_trees
        Int? n_top_init_trees
        Int? n_best_retain_trees
        Int? stop_iter
        Float? perturb_nni_strength
        Int? spr_radius
        Int? n_max_ufboot_iter
        Int? n_ufboot_steps
        Float? min_cor_ufboot
        Float? ep_break_ufboot
        Boolean allnni = false
        Int? alrt
        Boolean abayes = false
        Int? lbp
        Boolean bnni = false
        Boolean safe = false
        String tree
    }

    call qiime2_phylogeny_iqtree_ultrafast_bootstrap {
        input: alignment=alignment, seed=seed, n_cores=n_cores, n_cores_max=n_cores_max, n_runs=n_runs, substitution_model=substitution_model, bootstrap_replicates=bootstrap_replicates, n_init_pars_trees=n_init_pars_trees, n_top_init_trees=n_top_init_trees, n_best_retain_trees=n_best_retain_trees, stop_iter=stop_iter, perturb_nni_strength=perturb_nni_strength, spr_radius=spr_radius, n_max_ufboot_iter=n_max_ufboot_iter, n_ufboot_steps=n_ufboot_steps, min_cor_ufboot=min_cor_ufboot, ep_break_ufboot=ep_break_ufboot, allnni=allnni, alrt=alrt, abayes=abayes, lbp=lbp, bnni=bnni, safe=safe, tree=tree
    }

}
