# 
# Copyright (c) 2024, QIIME 2 development team.
# 
# Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
# 
# 
# This template was automatically generated by:
#     q2dataflow wdl (version: 0.2.0)
# for:
#     qiime2 (version: 2024.2.0)
# 


version 1.0

struct qiime2_dada2_denoise_single_params {
    File demultiplexed_seqs
    Int trunc_len
    Int trim_left
    Float max_ee
    Int trunc_q
    String pooling_method
    String chimera_method
    Float min_fold_parent_over_abundance
    Boolean allow_one_off
    Int n_threads
    Int n_reads_learn
    Boolean hashed_feature_ids
    String table
    String representative_sequences
    String denoising_stats
}

task qiime2_dada2_denoise_single {

    input {
        File demultiplexed_seqs
        Int trunc_len
        Int trim_left = 0
        Float max_ee = 2.0
        Int trunc_q = 2
        String pooling_method = "independent"
        String chimera_method = "consensus"
        Float min_fold_parent_over_abundance = 1.0
        Boolean allow_one_off = false
        Int n_threads = 1
        Int n_reads_learn = 1000000
        Boolean hashed_feature_ids = true
        String table
        String representative_sequences
        String denoising_stats
    }

    qiime2_dada2_denoise_single_params task_params = object {
        demultiplexed_seqs: demultiplexed_seqs,
        trunc_len: trunc_len,
        trim_left: trim_left,
        max_ee: max_ee,
        trunc_q: trunc_q,
        pooling_method: pooling_method,
        chimera_method: chimera_method,
        min_fold_parent_over_abundance: min_fold_parent_over_abundance,
        allow_one_off: allow_one_off,
        n_threads: n_threads,
        n_reads_learn: n_reads_learn,
        hashed_feature_ids: hashed_feature_ids,
        table: table,
        representative_sequences: representative_sequences,
        denoising_stats: denoising_stats
    }

    command {
        q2dataflow wdl run dada2 denoise_single ~{write_json(task_params)}
    }

    output {
        File table_file = "~{table}"
        File representative_sequences_file = "~{representative_sequences}"
        File denoising_stats_file = "~{denoising_stats}"
    }

}


workflow wkflw_qiime2_dada2_denoise_single {
input {
        File demultiplexed_seqs
        Int trunc_len
        Int trim_left = 0
        Float max_ee = 2.0
        Int trunc_q = 2
        String pooling_method = "independent"
        String chimera_method = "consensus"
        Float min_fold_parent_over_abundance = 1.0
        Boolean allow_one_off = false
        Int n_threads = 1
        Int n_reads_learn = 1000000
        Boolean hashed_feature_ids = true
        String table
        String representative_sequences
        String denoising_stats
    }

    call qiime2_dada2_denoise_single {
        input: demultiplexed_seqs=demultiplexed_seqs, trunc_len=trunc_len, trim_left=trim_left, max_ee=max_ee, trunc_q=trunc_q, pooling_method=pooling_method, chimera_method=chimera_method, min_fold_parent_over_abundance=min_fold_parent_over_abundance, allow_one_off=allow_one_off, n_threads=n_threads, n_reads_learn=n_reads_learn, hashed_feature_ids=hashed_feature_ids, table=table, representative_sequences=representative_sequences, denoising_stats=denoising_stats
    }

}
